<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>蓝牙小车之改bug</title>
      <link href="/2023/01/09/%E8%93%9D%E7%89%99%E5%B0%8F%E8%BD%A6%E4%B9%8B%E6%94%B9bug/"/>
      <url>/2023/01/09/%E8%93%9D%E7%89%99%E5%B0%8F%E8%BD%A6%E4%B9%8B%E6%94%B9bug/</url>
      
        <content type="html"><![CDATA[<p>经典写代码半小时，改bug两小时</p><span id="more"></span><h2 id="串口接收中断"><a href="#串口接收中断" class="headerlink" title="串口接收中断"></a>串口接收中断</h2><blockquote><p>在cube配置UART的时候,忘记在中断接收那里✔了…</p></blockquote><h2 id="串口接收数据过程"><a href="#串口接收数据过程" class="headerlink" title="串口接收数据过程"></a>串口接收数据过程</h2><blockquote><p>发送数据时,是整体打包发送.(在中断回调函数中)在接收的时候,是一位一位读取的,在检测到后面两个截止位的时候,就会停止接收,进入下一个任务.</p><p>如果在检测到截止位就立即清空数据包, 那么在外面的大循环中就无法判断到接收到的数据包, 应该在执行完判断任务后再清空.</p></blockquote><h2 id="串口接收到的数据包"><a href="#串口接收到的数据包" class="headerlink" title="串口接收到的数据包"></a>串口接收到的数据包</h2><blockquote><p>通过普通的usb转串口模块,接收到的数据包有两个截止位(0X0D,0X0A)</p><p>但是用蓝牙通信发送的,只是软件上配置的数据,没有加截止位</p></blockquote><h2 id="printf的重定向"><a href="#printf的重定向" class="headerlink" title="printf的重定向"></a>printf的重定向</h2><p>在usart.c源文件中(针对于 cube),添加下面的代码</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="keyword">extern</span> UART_HandleTypeDef huart1;</span><br><span class="line"><span class="comment">//只重定向到了UART1</span></span><br><span class="line"><span class="comment">//重定向printf函数到串口</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">fputc</span><span class="params">(<span class="type">int</span> ch,FILE* f)</span>&#123;</span><br><span class="line">  HAL_UART_Transmit(&amp;huart1,(<span class="type">uint8_t</span>* )&amp;ch,<span class="number">1</span>,<span class="number">1000</span>);<span class="comment">//注意这里的int类型的ch,要强制转换一下类型</span></span><br><span class="line">  <span class="keyword">return</span> ch;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//重定向scanf函数到串口</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">fgetc</span><span class="params">(FILE* F)</span>&#123;</span><br><span class="line">  <span class="type">uint8_t</span> ch_r = <span class="number">0</span>;</span><br><span class="line">  HAL_UART_Receive(&amp;huart1,&amp;ch_r,<span class="number">1</span>,<span class="number">0xffff</span>);</span><br><span class="line">  <span class="keyword">return</span> ch_r;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>重定向原理: printf默认输出设备是显示器终端,如果要显示到串口或者lcd之类上,就要重定向.</p><p><strong>注意</strong> : 还要在keil上勾选use microlib</p></blockquote><h2 id="sizeof的计算"><a href="#sizeof的计算" class="headerlink" title="sizeof的计算"></a>sizeof的计算</h2><blockquote><p>sizeof计算的是定义到的数组长度,也就是定义了多少,计算出来就是多少  .</p><p>还有一个计算是实际的长度,忘记是什么函数了</p></blockquote><h2 id="STM32cube配置出现中文乱码"><a href="#STM32cube配置出现中文乱码" class="headerlink" title="STM32cube配置出现中文乱码"></a>STM32cube配置出现中文乱码</h2><p>在Windows的环境变量中加入这个, 这种方法目前还没测试过.</p><blockquote><ul><li>变量名称：JAVA_TOOL_OPTIONS</li><li>变量值：-Dfile.encoding &#x3D; UTF-8</li></ul></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> 单片机 </tag>
            
            <tag> HAL </tag>
            
            <tag> STM32 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HAL之UART</title>
      <link href="/2023/01/07/HAL%E4%B9%8BUART/"/>
      <url>/2023/01/07/HAL%E4%B9%8BUART/</url>
      
        <content type="html"><![CDATA[<p>UART常用函数，HAL库的串口中断流程</p><span id="more"></span><hr><p>HAL_UART_Transmit(); 串口发送数据，使用超时管理机制<br>HAL_UART_Transmit_IT();    串口中断模式发送<br>HAL_UART_Transmit_DMA();       串口DMA模式发送</p><p>HAL_UART_Receive_IT();     串口中断模式接收<br>HAL_UART_Receive();  串口接收数据，使用超时管理机制<br>HAL_UART_Transmit_DMA();   串口DMA模式接收</p><h3 id="串口中断流程"><a href="#串口中断流程" class="headerlink" title="串口中断流程"></a>串口中断流程</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">HAL_UART_Receive_IT//中断接收函数</span><br><span class="line">USART2_IRQHandler(void)//中断服务函数</span><br><span class="line">HAL_UART_IRQHandler(*huart)//中断处理函数</span><br><span class="line">UART_Receive_IT(*huart)//接收函数</span><br><span class="line">HAL_UART_RxCpltCallback(huart)//中断回调函数(要自己修改)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">graph TB</span><br><span class="line">A(中断接收函数)--&gt;B(中断服务函数)--&gt;C(中断处理函数)--&gt;D(接收函数)--&gt;E(中断回调函数)--&gt;A(中断接收函数)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 单片机 </tag>
            
            <tag> HAL </tag>
            
            <tag> STM32 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HAL之GPIO</title>
      <link href="/2023/01/07/HAL%E4%B9%8BGPIO/"/>
      <url>/2023/01/07/HAL%E4%B9%8BGPIO/</url>
      
        <content type="html"><![CDATA[<p>常用的GPIO函数以及工作模式</p><span id="more"></span><hr><h2 id="常用函数"><a href="#常用函数" class="headerlink" title="常用函数"></a>常用函数</h2><h4 id="输入函数"><a href="#输入函数" class="headerlink" title="输入函数"></a>输入函数</h4><blockquote><p>HAL_GPIO_ReadPin()&#x2F;&#x2F;读取引脚电平</p></blockquote><h4 id="输出函数"><a href="#输出函数" class="headerlink" title="输出函数"></a>输出函数</h4><blockquote><p>HAL_GPIO_WritePin()&#x2F;&#x2F;写入高低电平</p><p>HAL_GPIO_TogglePin()&#x2F;&#x2F;反转电平</p></blockquote><h4 id="中断函数"><a href="#中断函数" class="headerlink" title="中断函数"></a>中断函数</h4><blockquote><p>HAL_GPIO_EXTI_IRQHandler()&#x2F;&#x2F;外部中断服务函数</p><p>HAL_GPIO_EXTI_Callback()&#x2F;&#x2F;外部中断回调函数</p></blockquote><h2 id="工作模式"><a href="#工作模式" class="headerlink" title="工作模式"></a>工作模式</h2><h3 id="输入模式GPIO-Input"><a href="#输入模式GPIO-Input" class="headerlink" title="输入模式GPIO_Input"></a>输入模式GPIO_Input</h3><p>浮空输入</p><blockquote><p>引脚电平是真实的外部连接器件电压，电平有不确定性</p></blockquote><p>上拉输入</p><blockquote><p>默认通过电阻上拉到VCC,不接外部器件时可以读出高电平</p></blockquote><p>下拉输入</p><blockquote><p>默认通过电阻下拉到GND,不接外部器件时可以读出低电平</p></blockquote><h3 id="输出模式"><a href="#输出模式" class="headerlink" title="输出模式"></a>输出模式</h3><p>推挽(push pull)</p><blockquote><p>一种使用一对选择性地从相连负载灌电流或者拉电流的器件的电路。</p></blockquote><p>开漏(open drain)</p><blockquote><p>高电平时没有驱动能力，需要借助外部上拉电阻完成对外驱动。</p></blockquote><p>浮空(no-pull-)</p><blockquote><p>引脚电平是真实的外部连接器件电压，电平有不确定性</p></blockquote><p>上拉</p><blockquote><p>默认通过电阻上拉到VCC,不接外部器件时可以输出高电平</p></blockquote><p>下拉</p><blockquote><p>默认通过电阻下拉到GND,不接外部器件时可以输出低电平 </p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> 单片机 </tag>
            
            <tag> HAL </tag>
            
            <tag> STM32 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>蓝牙模块HC-05</title>
      <link href="/2023/01/07/%E8%93%9D%E7%89%99%E6%A8%A1%E5%9D%97HC-05/"/>
      <url>/2023/01/07/%E8%93%9D%E7%89%99%E6%A8%A1%E5%9D%97HC-05/</url>
      
        <content type="html"><![CDATA[<p>HC-05蓝牙模块基本原理及使用方法</p><span id="more"></span><hr><h3 id="波特率"><a href="#波特率" class="headerlink" title="波特率"></a>波特率</h3><ol><li>AT测试的波特率默认为38400,1停止位,8数据位</li><li>蓝牙通信波特率默认为9600,0,0</li></ol><h3 id="AT测试"><a href="#AT测试" class="headerlink" title="AT测试"></a>AT测试</h3><blockquote><p>接线: </p><ul><li><p>GND-&gt;GND</p></li><li><p>RXD-&gt;TXD</p></li><li><p>TXD-&gt;RXD</p></li><li><p>VCC-&gt;5V</p></li><li><p>EN和STATE不接</p></li><li><p><strong>注意: 模块上的VCC不能接3.3V</strong>, 资料说不可以，但是我接VCC和3V3都没问题。</p><p>按住模块上的按键再去供电, 进入慢闪(一秒一次)模式，即为AT测试</p></li></ul></blockquote><h3 id="AT测试命令"><a href="#AT测试命令" class="headerlink" title="AT测试命令"></a>AT测试命令</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span> 先输入AT，当返回OK时，代表进入AT测试</span><br><span class="line">AT+VERSION<span class="comment">//当前版本</span></span><br><span class="line">AT+ORGL<span class="comment">//恢复出厂设置</span></span><br><span class="line">AT+RESET<span class="comment">//复位</span></span><br><span class="line">AT+NAME<span class="comment">//蓝牙名字</span></span><br><span class="line">AT+PSWD<span class="comment">//连接密码</span></span><br><span class="line">AT+ROLE<span class="comment">//模式选择</span></span><br><span class="line">    <span class="number">1</span>：从机</span><br><span class="line">    <span class="number">2</span>：主机</span><br><span class="line">    <span class="number">3</span>：回环</span><br><span class="line">AT+UART<span class="comment">//波特率</span></span><br><span class="line">AT+ADDR<span class="comment">//蓝牙地址码</span></span><br><span class="line">AT+STATE<span class="comment">//当前工作状态</span></span><br><span class="line">AT+DISC<span class="comment">//断开连接</span></span><br><span class="line">AT+RNAME<span class="comment">//获取远程蓝牙设备名称</span></span><br><span class="line">AT+ADCN<span class="comment">//获取蓝牙配对表中设备个数</span></span><br><span class="line">......</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="蓝牙连接"><a href="#蓝牙连接" class="headerlink" title="蓝牙连接"></a>蓝牙连接</h3><p>AT测试，查询完相应数据后，拔掉电源。这次不用按按键，直接插电。模块的灯快闪，进入等待连接状态。</p><blockquote><p>手机打开<a href="https://pan.baidu.com/s/165RPnBSNWQYb76hcuZfKIg?pwd=6666">蓝牙调试器</a> , <a href="https://www.jianshu.com/p/1a8262492619">蓝牙调试器介绍</a></p><p>找到设备, 默认的连接密码为1234.</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> 模块 </tag>
            
            <tag> 单片机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>L298N驱动</title>
      <link href="/2023/01/06/L298N%E9%A9%B1%E5%8A%A8/"/>
      <url>/2023/01/06/L298N%E9%A9%B1%E5%8A%A8/</url>
      
        <content type="html"><![CDATA[<p>L298N原理图及驱动方式</p><span id="more"></span><hr><center><h1 style="color:yellow">    L298N    </h1></center><h3 id="原理图"><a href="#原理图" class="headerlink" title="原理图"></a>原理图</h3><div align = "center"><img src="https://pic2.zhimg.com/80/v2-625094b40f2c5230af1b70f5e3c6ba35_1440w.webp"><hr><img src="https://pic4.zhimg.com/80/v2-8fb3efbd0d82669a496a179a46655e47_1440w.webp"><hr><img src="https://pic2.zhimg.com/80/v2-8ed7420890b8dc5b3dd5f0b5c02a7b11_1440w.webp"></div><h3 id="接线方式"><a href="#接线方式" class="headerlink" title="接线方式"></a>接线方式</h3><blockquote><ul><li><p>工作电压: 9~12v</p></li><li><p>将电池盒或者锂电池的<strong>正极</strong>接到上图的<strong>vcc</strong></p></li><li><p>如果安装了5v跳线帽, 5v接口是用来给单片机供电的, 这种情况下, 供电电源的GND要分两条, 模块和单片机共地</p><blockquote><p>如果用5V来给单片机供电的话, 可能会出问题, 因为没有稳压, 可能会有掉压的情况.</p></blockquote></li><li><p>电机分别接上图8, 9 引脚7</p></li></ul></blockquote><h3 id="驱动方式"><a href="#驱动方式" class="headerlink" title="驱动方式"></a>驱动方式</h3><table><thead><tr><th align="center"></th><th align="center"></th><th align="center"></th><th align="center"></th><th align="center"></th><th align="center"></th></tr></thead><tbody><tr><td align="center">电机</td><td align="center">旋转方式</td><td align="center">IN1</td><td align="center">IN2</td><td align="center">IN3</td><td align="center">IN4</td></tr><tr><td align="center">M1</td><td align="center">正转</td><td align="center">高</td><td align="center">低</td><td align="center">&#x2F;</td><td align="center">&#x2F;</td></tr><tr><td align="center">(左)</td><td align="center">反转</td><td align="center">低</td><td align="center">高</td><td align="center">&#x2F;</td><td align="center">&#x2F;</td></tr><tr><td align="center"></td><td align="center">停止</td><td align="center">低</td><td align="center">低</td><td align="center">&#x2F;</td><td align="center">&#x2F;</td></tr><tr><td align="center">M2</td><td align="center">正转</td><td align="center">&#x2F;</td><td align="center">&#x2F;</td><td align="center">高</td><td align="center">低</td></tr><tr><td align="center">(右)</td><td align="center">反转</td><td align="center">&#x2F;</td><td align="center">&#x2F;</td><td align="center">低</td><td align="center">高</td></tr><tr><td align="center"></td><td align="center">停止</td><td align="center">&#x2F;</td><td align="center">&#x2F;</td><td align="center">低</td><td align="center">低</td></tr></tbody></table><blockquote><p>如果要用PWM调速的话, 要拔掉<strong>ENA</strong>和<strong>ENB</strong>的跳线帽, 将PWM输出到这两个引脚来实现PWM调速.</p><p>IN口控制正反转, EN口用来调速</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> 模块 </tag>
            
            <tag> 单片机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hello hexo</title>
      <link href="/2022/12/07/hello-hexo/"/>
      <url>/2022/12/07/hello-hexo/</url>
      
        <content type="html"><![CDATA[<p><strong>HELLO LLS</strong><br>你好！世界，你好！YWM，AND I LOVE YOU LSQ</p>]]></content>
      
      
      
        <tags>
            
            <tag> first </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/12/07/hello-world/"/>
      <url>/2022/12/07/hello-world/</url>
      
        <content type="html"><![CDATA[<p>hexo简单用法</p><span id="more"></span><hr><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
